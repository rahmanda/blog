---
import { getCollection } from "astro:content";
import { formatDate } from "src/utils/date";
import { t } from "src/config";
import BaseLayout from "src/layouts/Base.astro";
import Navbar from "./Navbar.astro";
import Footer from "./Footer.astro";
import NoteCard from "./NoteCard.astro";
import BlogCard from "./BlogCard.astro";

interface Props {
  locale: "en" | "id";
  summary: string;
}

const { locale, summary } = Astro.props;

const title = "Blog";

const blogEntries = (await getCollection("blog")).filter(
  (entry) => entry.data.language === locale,
);

const noteEntries = (await getCollection("notes")).filter(
  (entry) => entry.data.language === locale,
);

const featuredEntry = blogEntries.pop();

const featuredEntryLink = `/${locale}/blog/${featuredEntry?.slug}`;
const viewAllPostsLink = `/${locale}/blog/archive`;
const viewAllNotesLink = `/${locale}/notes`;
---

<BaseLayout frontmatter={{ title, summary, locale }}>
  <Navbar locale={locale} slug="blog" />

  <main class="px-4 max-w-screen-lg mx-auto">
    <article class="mt-14 sm:mt-20 mb-12 sm:mb-16">
      <aside class="flex items-center gap-2 mb-4">
        <span class="bg-gray-200 font-sans-title text-sm py-1 px-2 rounded"
          >{t[locale].featured}</span
        >
        <p class="text-sm">
          {
            featuredEntry &&
              formatDate(featuredEntry.data.published_date, locale)
          }
        </p>
      </aside>
      <h2 class="font-sans-title text-3xl sm:text-5xl mb-4 sm:mb-6">
        {featuredEntry?.data.title}
      </h2>
      <p class="sm:text-lg mb-5 sm:mb-6">{featuredEntry?.data.summary}</p>
      <div>
        <a
          href={featuredEntryLink}
          class="inline-flex items-center gap-1 font-sans-title border border-gray-900 sm:text-lg py-2 px-3 rounded"
          >{t[locale].read_article}
          <svg
            class="w-4"
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
            class="feather feather-arrow-right"
            ><line x1="5" y1="12" x2="19" y2="12"></line><polyline
              points="12 5 19 12 12 19"></polyline></svg
          ></a
        >
      </div>
    </article>

    <section class="mb-12 sm:mb-16">
      <ul class="grid grid-cols-1 sm:grid-cols-2 auto-rows-fr gap-8 mb-8">
        {
          blogEntries &&
            blogEntries
              .sort(
                (a, b) =>
                  b.data.published_date.getTime() -
                  a.data.published_date.getTime(),
              )
              .slice(0, 6)
              .map((entry) => (
                <li>
                  <BlogCard entry={entry} locale={locale} />
                </li>
              ))
        }
      </ul>
      <div>
        <a
          href={viewAllPostsLink}
          class="inline-flex items-center gap-1 font-sans-title border border-gray-900 sm:text-lg py-2 px-3 rounded"
          >{t[locale].view_all_posts}<svg
            class="w-4"
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
            class="feather feather-arrow-right"
            ><line x1="5" y1="12" x2="19" y2="12"></line><polyline
              points="12 5 19 12 12 19"></polyline></svg
          ></a
        >
      </div>
    </section>

    <section class="mb-16 sm:mb-24">
      <h2 class="font-sans-title text-2xl sm:text-4xl my-4 sm:my-6">Notes.</h2>
      <p class="sm:text-lg mb-6">
        {t[locale].notes_description}
      </p>
      <ul class="grid grid-cols-1 sm:grid-cols-3 auto-rows-fr gap-8 mb-8">
        {
          noteEntries &&
            noteEntries
              .sort(
                (a, b) =>
                  b.data.published_date.getTime() -
                  a.data.published_date.getTime(),
              )
              .slice(0, 6)
              .map((entry) => (
                <li>
                  <NoteCard entry={entry} locale={locale} />
                </li>
              ))
        }
      </ul>
      <div>
        <a
          href={viewAllNotesLink}
          class="inline-flex items-center gap-1 font-sans-title border border-gray-900 sm:text-lg py-2 px-3 rounded"
          >{t[locale].view_all_notes}<svg
            class="w-4"
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
            class="feather feather-arrow-right"
            ><line x1="5" y1="12" x2="19" y2="12"></line><polyline
              points="12 5 19 12 12 19"></polyline></svg
          ></a
        >
      </div>
    </section>
  </main>
  <Footer locale={locale} />
</BaseLayout>
